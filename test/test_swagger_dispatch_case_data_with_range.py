# coding: utf-8

"""
    WEMDE Dispatch

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wemde_dispatch_client.models.swagger_dispatch_case_data_with_range import SwaggerDispatchCaseDataWithRange

class TestSwaggerDispatchCaseDataWithRange(unittest.TestCase):
    """SwaggerDispatchCaseDataWithRange unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SwaggerDispatchCaseDataWithRange:
        """Test SwaggerDispatchCaseDataWithRange
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SwaggerDispatchCaseDataWithRange`
        """
        model = SwaggerDispatchCaseDataWithRange()
        if include_optional:
            return SwaggerDispatchCaseDataWithRange(
                data = wemde_dispatch_client.models.dispatch_case_data_with_range.DispatchCaseDataWithRange(
                    dispatch_data_issue_id = '', 
                    case_data = [
                        wemde_dispatch_client.models.data_with_range.DataWithRange(
                            scenario = '', 
                            dispatch_interval = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            primary_dispatch_interval = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            parameters = [
                                wemde_dispatch_client.models.parameter.Parameter(
                                    name = '', 
                                    value = 1.337, )
                                ], 
                            constraint_violation_parameters = [
                                wemde_dispatch_client.models.constraint_violation_parameter.ConstraintViolationParameter(
                                    variable = '', 
                                    price = 1.337, )
                                ], 
                            scada = [
                                wemde_dispatch_client.models.scadum.Scadum(
                                    tag = '', 
                                    value = '', 
                                    value_data_type = '', 
                                    quality_flag = '', 
                                    data_source = '', 
                                    as_at_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            constraint_look_up = wemde_dispatch_client.models.constraint_look_up.ConstraintLookUp(
                                forecast/regional_forecast_south_west_great_southern_region_base_load_expected = 1.337, 
                                forecast/regional_forecast_south_west_great_southern_region_load_expected = 1.337, 
                                forecast/regional_forecast_north_country_region_load_expected = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_bom_access_a_low = 1.337, 
                                forecast/ess_regulation_raise_expected = 1.337, 
                                forecast/ess_regulation_lower_expected = 1.337, 
                                forecast/ess_contingency_lower_expected = 1.337, 
                                forecast/energy_forecast_operational_demand_expected = 1.337, 
                                forecast/energy_forecast_operational_demand_high = 1.337, 
                                forecast/energy_forecast_operational_demand_low = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_warradarge_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_walkaway_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_yandin_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_bom_access_a_expected = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_bom_combined_expected = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_bom_access_a_high = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_bom_combined_high = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_albany_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_bom_access_a_low = 1.337, 
                                forecast/nsg_forecast_badgingarra_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_emu_downs_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_collgar_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_bom_combined_low = 1.337, 
                                forecast/nsg_forecast_mumbida_wind_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_mungara_solar_farm_bom_expected = 1.337, 
                                forecast/nsg_forecast_merredin_solar_farm_bom_expected = 1.337, 
                                forecast/nsg_forecast_mungara_solar_farm_bom_high = 1.337, 
                                forecast/nsg_forecast_merredin_solar_farm_bom_high = 1.337, 
                                forecast/nsg_forecast_mungara_solar_farm_bom_low = 1.337, 
                                forecast/nsg_forecast_merredin_solar_farm_bom_low = 1.337, 
                                forecast/nsg_forecast_merredin_solar_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_mungara_solar_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_merredin_solar_farm_wz_low = 1.337, 
                                forecast/nsg_forecast_mungara_solar_farm_wz_expected = 1.337, 
                                forecast/nsg_forecast_merredin_solar_farm_wz_high = 1.337, 
                                forecast/nsg_forecast_mungara_solar_farm_wz_low = 1.337, 
                                forecast/regional_forecast_eastern_goldfields_expected = 1.337, 
                                forecast/regional_forecast_north_of_three_springs_expected = 1.337, 
                                forecast/regional_forecast_north_country_region_base_load_expected = 1.337, 
                                solver/minutes_since_primary = 1.337, ), 
                            constraints = wemde_dispatch_client.models.constraints.Constraints(
                                constraint_set = [
                                    wemde_dispatch_client.models.constraint_set.ConstraintSet(
                                        id = '', 
                                        constraint_equations = [
                                            ''
                                            ], 
                                        version = 56, 
                                        description = '', 
                                        comments = '', )
                                    ], 
                                constraint_equations = [
                                    wemde_dispatch_client.models.constraint_equation.ConstraintEquation(
                                        id = '', 
                                        description = '', 
                                        comments = '', 
                                        left_hand_side = [
                                            wemde_dispatch_client.models.left_hand_side.LeftHandSide(
                                                term = '', 
                                                coefficient = 1.337, 
                                                term_type = '', 
                                                index = 56, )
                                            ], 
                                        operator = '', 
                                        right_hand_side = [
                                            wemde_dispatch_client.models.right_hand_side.RightHandSide(
                                                term = '', 
                                                coefficient = 1.337, 
                                                term_type = '', 
                                                index = 56, )
                                            ], 
                                        right_hand_side_script = '', 
                                        required = True, 
                                        limit_type = '', 
                                        limit_advice_id = '', 
                                        is_intervention_event = True, 
                                        constraint_type = '', 
                                        default_rhs = 1.337, 
                                        violation_penalty = 1.337, 
                                        contingency = '', 
                                        monitored_element = '', 
                                        version = 56, 
                                        system_configuration = '', )
                                    ], ), 
                            dfcm_data = wemde_dispatch_client.models.dfcm_data.DfcmData(
                                dfcm_id = '', 
                                dfcm_schema_version = '', 
                                frequency_limits = wemde_dispatch_client.models.frequency_limits.FrequencyLimits(
                                    rocof_max = 1.337, 
                                    rocof_min = 1.337, 
                                    fmin = 1.337, 
                                    fmax = 1.337, 
                                    fss = 1.337, ), 
                                dfcm_validation_details = wemde_dispatch_client.models.dfcm_validation_details.DfcmValidationDetails(
                                    inertia_range_minimum = 1.337, 
                                    inertia_range_maximum = 1.337, 
                                    inertia_range_step = 1.337, 
                                    largest_contingency_size_minimum = 1.337, 
                                    largest_contingency_size_maximum = 1.337, 
                                    largest_contingency_size_step = 1.337, ), 
                                tau_valuesfor_cr_performance_factors = [
                                    1.337
                                    ], ), 
                            registration_data = [
                                wemde_dispatch_client.models.registration_datum.RegistrationDatum(
                                    facility_code = '', 
                                    nol = True, 
                                    facility_standing_data = wemde_dispatch_client.models.facility_standing_data.FacilityStandingData(
                                        facility_registration_status = '', 
                                        facility_class = '', 
                                        storage_constraints = True, 
                                        inertia = 1.337, 
                                        tau_factor = 1.337, 
                                        unconstrained_forecast_source = 'scada', 
                                        effective_dispatch_interval_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                                ], 
                            facility_loss_factors = [
                                wemde_dispatch_client.models.facility_loss_factor.FacilityLossFactor(
                                    facility_code = '', 
                                    transmission_loss_factor = 1.337, 
                                    distribution_loss_factor = 1.337, )
                                ], 
                            uigf = [
                                wemde_dispatch_client.models.uigf.Uigf(
                                    facility_code = '', 
                                    unconstrained_injection_forecast_mw = 1.337, 
                                    unconstrained_withdrawal_forecast_mw = 1.337, )
                                ], 
                            rcm_data = [
                                wemde_dispatch_client.models.rcm_datum.RcmDatum(
                                    facility_code = '', 
                                    rcoq = 1.337, )
                                ], 
                            market_services_price_flag = wemde_dispatch_client.models.market_services_price_flag.MarketServicesPriceFlag(
                                energy_price_at_cap = True, 
                                regulation_raise_price_at_cap = True, 
                                regulation_lower_price_at_cap = True, 
                                contingency_lower_price_at_cap = True, 
                                contingency_raise_price_at_cap = True, 
                                rocof_price_at_cap = True, ), 
                            markets = wemde_dispatch_client.models.market.Market(
                                energy = wemde_dispatch_client.models.energy.Energy(
                                    market_service = '', 
                                    base_forecast_requirement = 1.337, 
                                    override_forecast_requirement = 1.337, 
                                    facilities = [
                                        wemde_dispatch_client.models.energy_facility.EnergyFacility(
                                            dsp_unconstrained_withdrawal_quantity = 1.337, 
                                            dsp_constrained_withdrawal_quantity = 1.337, 
                                            facility_code = '', 
                                            submission_id = '', 
                                            submission_code = '', 
                                            max_injection_capacity = 1.337, 
                                            max_withdrawal_capacity = 1.337, 
                                            unconstrained_injection_forecast = 1.337, 
                                            unconstrained_withdrawal_forecast = 1.337, 
                                            inflexible_flag = True, 
                                            max_upward_ramp_rate = 1.337, 
                                            downwards_ramp_rate_value_used = 1.337, 
                                            max_downward_ramp_rate = 1.337, 
                                            upwards_ramp_rate_value_used = 1.337, 
                                            fsip = wemde_dispatch_client.models.fsip.Fsip(
                                                t1 = 1.337, 
                                                t2 = 1.337, 
                                                t3 = 1.337, 
                                                t4 = 1.337, 
                                                minimum_load = 1.337, ), 
                                            tranches = [
                                                wemde_dispatch_client.models.tranch.Tranch(
                                                    tranche = 56, 
                                                    fuel_type = '', 
                                                    quantity = 1.337, 
                                                    submitted_price = 1.337, 
                                                    lfa_price = 1.337, 
                                                    capacity_type = '', 
                                                    notice_time = 56, )
                                                ], )
                                        ], ), 
                                regulation_raise = wemde_dispatch_client.models.regulation_raise.RegulationRaise(
                                    market_service = '', 
                                    base_forecast_requirement = 1.337, 
                                    override_forecast_requirement = 1.337, 
                                    facilities = [
                                        wemde_dispatch_client.models.facility.Facility(
                                            dsp_unconstrained_withdrawal_quantity = 1.337, 
                                            dsp_constrained_withdrawal_quantity = 1.337, 
                                            facility_code = '', 
                                            submission_id = '', 
                                            submission_code = '', 
                                            maximum_capacity = 1.337, 
                                            enablement_minimum = 1.337, 
                                            enablement_minimum_value_used = 1.337, 
                                            low_breakpoint = 1.337, 
                                            low_breakpoint_value_used = 1.337, 
                                            high_breakpoint = 1.337, 
                                            high_breakpoint_value_used = 1.337, 
                                            enablement_maximum = 1.337, 
                                            enablement_maximum_value_used = 1.337, )
                                        ], ), 
                                regulation_lower = wemde_dispatch_client.models.regulation_lower.RegulationLower(
                                    market_service = '', 
                                    base_forecast_requirement = 1.337, 
                                    override_forecast_requirement = 1.337, 
                                    facilities = [
                                        wemde_dispatch_client.models.facility.Facility(
                                            dsp_unconstrained_withdrawal_quantity = 1.337, 
                                            dsp_constrained_withdrawal_quantity = 1.337, 
                                            facility_code = '', 
                                            submission_id = '', 
                                            submission_code = '', 
                                            maximum_capacity = 1.337, 
                                            enablement_minimum = 1.337, 
                                            enablement_minimum_value_used = 1.337, 
                                            low_breakpoint = 1.337, 
                                            low_breakpoint_value_used = 1.337, 
                                            high_breakpoint = 1.337, 
                                            high_breakpoint_value_used = 1.337, 
                                            enablement_maximum = 1.337, 
                                            enablement_maximum_value_used = 1.337, )
                                        ], ), 
                                contingency_raise = wemde_dispatch_client.models.contingency_raise.ContingencyRaise(
                                    market_service = '', 
                                    base_forecast_requirement = 1.337, 
                                    override_forecast_requirement = 1.337, 
                                    facilities = , ), 
                                contingency_lower = wemde_dispatch_client.models.contingency_lower.ContingencyLower(
                                    market_service = '', 
                                    base_forecast_requirement = 1.337, 
                                    override_forecast_requirement = 1.337, 
                                    facilities = , ), 
                                rocof = wemde_dispatch_client.models.rocof.Rocof(
                                    market_service = '', 
                                    base_forecast_requirement = 1.337, 
                                    override_forecast_requirement = 1.337, 
                                    facilities = , ), ), )
                        ], ),
                errors = [
                    null
                    ],
                warnings = [
                    null
                    ],
                infos = [
                    null
                    ],
                transaction_id = ''
            )
        else:
            return SwaggerDispatchCaseDataWithRange(
        )
        """

    def testSwaggerDispatchCaseDataWithRange(self):
        """Test SwaggerDispatchCaseDataWithRange"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
