# coding: utf-8

"""
    WEMDE Dispatch

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wemde_dispatch_client.models.dispatch_instructions_summary_data_with_range import DispatchInstructionsSummaryDataWithRange

class TestDispatchInstructionsSummaryDataWithRange(unittest.TestCase):
    """DispatchInstructionsSummaryDataWithRange unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DispatchInstructionsSummaryDataWithRange:
        """Test DispatchInstructionsSummaryDataWithRange
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DispatchInstructionsSummaryDataWithRange`
        """
        model = DispatchInstructionsSummaryDataWithRange()
        if include_optional:
            return DispatchInstructionsSummaryDataWithRange(
                dispatch_data_issue_id = '',
                dispatch_summary_data = [
                    wemde_dispatch_client.models.dispatch_summary_data_with_range.DispatchSummaryDataWithRange(
                        primary_dispatch_interval = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        dispatch_interval = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        markets = wemde_dispatch_client.models.markets.Markets(
                            energy = wemde_dispatch_client.models.market_sub_category.MarketSubCategory(
                                market_service = '', 
                                base_forecast_requirement = 1.337, 
                                override_forecast_requirement = 1.337, ), 
                            regulation_raise = wemde_dispatch_client.models.market_sub_category.MarketSubCategory(
                                market_service = '', 
                                base_forecast_requirement = 1.337, 
                                override_forecast_requirement = 1.337, ), 
                            regulation_lower = , 
                            contingency_raise = , 
                            contingency_lower = , 
                            rocof = , ), 
                        schedule = [
                            wemde_dispatch_client.models.schedule.Schedule(
                                market_service = '', 
                                facility_schedule = [
                                    wemde_dispatch_client.models.facility_schedule.FacilitySchedule(
                                        facility_code = '', 
                                        quantity = 1.337, 
                                        ess_pre_processing_condition_flag = True, )
                                    ], )
                            ], 
                        facility_schedule_details = [
                            wemde_dispatch_client.models.facility_schedule_detail.FacilityScheduleDetail(
                                facility_code = '', 
                                contingency_raise_pf = 1.337, 
                                contingency_lower_pf = 1.337, 
                                regulation_raise_pf = 1.337, 
                                regulation_lower_pf = 1.337, 
                                rocof_pf = 1.337, 
                                dispatch_binding_flag = True, 
                                contingency = 1.337, 
                                initial_mw = 1.337, 
                                fast_start_flag = True, 
                                fast_start_initial_mode_time = 56, 
                                fast_start_initial_mode = 56, 
                                what_if_initial_mw = 1.337, 
                                fast_start_target_mode = 56, 
                                fast_start_target_mode_time = 56, 
                                estimated_fcess_uplift_payment = 1.337, 
                                nol_demand = 1.337, 
                                congestion_rental = 1.337, 
                                facility_risk = 1.337, )
                            ], 
                        trapezium_adjustments = [
                            wemde_dispatch_client.models.trapezium_adjustment.TrapeziumAdjustment(
                                market_service = '', 
                                trapezium_adjustment_details = [
                                    wemde_dispatch_client.models.trapezium_adjustment_detail.TrapeziumAdjustmentDetail(
                                        facility_code = '', 
                                        enablement_minimum_value_used = 1.337, 
                                        low_breakpoint_value_used = 1.337, 
                                        high_breakpoint_value_used = 1.337, 
                                        enablement_maximum_value_used = 1.337, 
                                        downwards_ramp_rate_value_used = 1.337, 
                                        upwards_ramp_rate_value_used = 1.337, )
                                    ], )
                            ], 
                        prices = wemde_dispatch_client.models.prices.Prices(), )
                    ]
            )
        else:
            return DispatchInstructionsSummaryDataWithRange(
        )
        """

    def testDispatchInstructionsSummaryDataWithRange(self):
        """Test DispatchInstructionsSummaryDataWithRange"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
