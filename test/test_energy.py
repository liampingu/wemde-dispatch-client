# coding: utf-8

"""
    WEMDE Dispatch

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wemde_dispatch_client.models.energy import Energy

class TestEnergy(unittest.TestCase):
    """Energy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Energy:
        """Test Energy
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Energy`
        """
        model = Energy()
        if include_optional:
            return Energy(
                market_service = '',
                base_forecast_requirement = 1.337,
                override_forecast_requirement = 1.337,
                facilities = [
                    wemde_dispatch_client.models.energy_facility.EnergyFacility(
                        dsp_unconstrained_withdrawal_quantity = 1.337, 
                        dsp_constrained_withdrawal_quantity = 1.337, 
                        facility_code = '', 
                        submission_id = '', 
                        submission_code = '', 
                        max_injection_capacity = 1.337, 
                        max_withdrawal_capacity = 1.337, 
                        unconstrained_injection_forecast = 1.337, 
                        unconstrained_withdrawal_forecast = 1.337, 
                        inflexible_flag = True, 
                        max_upward_ramp_rate = 1.337, 
                        downwards_ramp_rate_value_used = 1.337, 
                        max_downward_ramp_rate = 1.337, 
                        upwards_ramp_rate_value_used = 1.337, 
                        fsip = wemde_dispatch_client.models.fsip.Fsip(
                            t1 = 1.337, 
                            t2 = 1.337, 
                            t3 = 1.337, 
                            t4 = 1.337, 
                            minimum_load = 1.337, ), 
                        tranches = [
                            wemde_dispatch_client.models.tranch.Tranch(
                                tranche = 56, 
                                fuel_type = '', 
                                quantity = 1.337, 
                                submitted_price = 1.337, 
                                lfa_price = 1.337, 
                                capacity_type = '', 
                                notice_time = 56, )
                            ], )
                    ]
            )
        else:
            return Energy(
                market_service = '',
                base_forecast_requirement = 1.337,
                override_forecast_requirement = 1.337,
                facilities = [
                    wemde_dispatch_client.models.energy_facility.EnergyFacility(
                        dsp_unconstrained_withdrawal_quantity = 1.337, 
                        dsp_constrained_withdrawal_quantity = 1.337, 
                        facility_code = '', 
                        submission_id = '', 
                        submission_code = '', 
                        max_injection_capacity = 1.337, 
                        max_withdrawal_capacity = 1.337, 
                        unconstrained_injection_forecast = 1.337, 
                        unconstrained_withdrawal_forecast = 1.337, 
                        inflexible_flag = True, 
                        max_upward_ramp_rate = 1.337, 
                        downwards_ramp_rate_value_used = 1.337, 
                        max_downward_ramp_rate = 1.337, 
                        upwards_ramp_rate_value_used = 1.337, 
                        fsip = wemde_dispatch_client.models.fsip.Fsip(
                            t1 = 1.337, 
                            t2 = 1.337, 
                            t3 = 1.337, 
                            t4 = 1.337, 
                            minimum_load = 1.337, ), 
                        tranches = [
                            wemde_dispatch_client.models.tranch.Tranch(
                                tranche = 56, 
                                fuel_type = '', 
                                quantity = 1.337, 
                                submitted_price = 1.337, 
                                lfa_price = 1.337, 
                                capacity_type = '', 
                                notice_time = 56, )
                            ], )
                    ],
        )
        """

    def testEnergy(self):
        """Test Energy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
