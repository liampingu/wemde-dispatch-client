# coding: utf-8

"""
    WEMDE Dispatch

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wemde_dispatch_client.models.constraint_equation import ConstraintEquation

class TestConstraintEquation(unittest.TestCase):
    """ConstraintEquation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConstraintEquation:
        """Test ConstraintEquation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConstraintEquation`
        """
        model = ConstraintEquation()
        if include_optional:
            return ConstraintEquation(
                id = '',
                description = '',
                comments = '',
                left_hand_side = [
                    wemde_dispatch_client.models.left_hand_side.LeftHandSide(
                        term = '', 
                        coefficient = 1.337, 
                        term_type = '', 
                        index = 56, )
                    ],
                operator = '',
                right_hand_side = [
                    wemde_dispatch_client.models.right_hand_side.RightHandSide(
                        term = '', 
                        coefficient = 1.337, 
                        term_type = '', 
                        index = 56, )
                    ],
                right_hand_side_script = '',
                required = True,
                limit_type = '',
                limit_advice_id = '',
                is_intervention_event = True,
                constraint_type = '',
                default_rhs = 1.337,
                violation_penalty = 1.337,
                contingency = '',
                monitored_element = '',
                version = 56,
                system_configuration = ''
            )
        else:
            return ConstraintEquation(
        )
        """

    def testConstraintEquation(self):
        """Test ConstraintEquation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
